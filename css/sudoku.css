:root {
  /* requires hex values */
  --background-color: #2f4f4f;
  --foreground-color: #000;
  --foreground-color-inverted: #fff;
  --foreground-color-secondary: #bababa;
  --foreground-color-secondary-inverted: #454545;
  --sudoku-row-count: 9;
  --cell-size: min(calc(95vw / var(--sudoku-row-count)), calc(75vh / var(--sudoku-row-count)));

  font-family: Arial, sans-serif;
  font-size: 250%;

  /* not supported in firefox yet: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_size_and_style_queries#browser_compatibility */
  /* @container style(--sudoku-row-count) { */
  &[data-sudoku-box-size='4'] {
    font-size: 150%;
  }

  &[data-sudoku-box-size='5'] {
    font-size: 125%;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

html,
body {
  margin: 0;
  min-height: 100%;
}

body {
  background-color: var(--background-color);
  color: var(--foreground-color);

  & > * {
    box-sizing: border-box;
  }
}

button {
  padding: .1rem .2rem;
  background-color: rgba(0, 0, 0, .15);
  cursor: pointer;
  border: none;
  border-radius: .1rem;
  font-size: .5rem;
}

input:not([type='range']):hover,
input[type='range']:hover:is(::-webkit-slider-thumb, ::-moz-range-thumb, ::-webkit-slider-runnable-track, ::-moz-range-track) {
  backdrop-filter: brightness(115%);
}

table#sudoku.notes-mode > tbody > tr > td > .notes > span:is([contenteditable="true"], [contenteditable="plaintext-only"]):hover {
  backdrop-filter: brightness(125%);
}

button:hover,
button:focus,
input:not([type='range']):focus,
input[type='range']:hover:is(::-webkit-slider-thumb, ::-moz-range-thumb, ::-webkit-slider-runnable-track, ::-moz-range-track),
table#sudoku.notes-mode > tbody > tr > td > .notes > span:is([contenteditable="true"], [contenteditable="plaintext-only"]):focus {
  backdrop-filter: brightness(150%);
  outline: none;
}

button:disabled {
  cursor: not-allowed;
  backdrop-filter: none;
}

.hidden {
  display: none !important;
}

.invisible {
  visibility: hidden !important;
}

.visible {
  visibility: visible !important;
}

header {
  display: flex;
  padding: .1rem .2rem;
  background: rgba(0, 0, 0, .1);
  font-size: 40%;
  width: 100vw;

  & > #timer {
    align-self: center;
    font-size: 150%;
  }

  & > h1 {
    margin: auto;
  }

  & > #color-switcher-container {
    display: grid;
    grid-template-columns: auto auto;
    align-items: center;
    gap: .2rem .2rem;

    & > div {
      display: contents;

      & > label {
        justify-self: end;
      }

      & > input {
        width: .5rem;
        height: .5rem;
        padding: 0;
        cursor: pointer;
        appearance: none;
        border: 1px solid gray;

        &::-webkit-color-swatch,
        &::-moz-color-swatch {
          border: 1px solid gray;
        }

        &::-webkit-color-swatch-wrapper {
          margin: 0;
          padding: 0;
        }
      }
    }
  }
}

#popup-container {
  position: absolute;
  width: fit-content;
  height: fit-content;
  bottom: .5rem;
  left: 50%;
  transform: translate(-50%);
  background: rgba(0, 0, 0, 0.2);
  color: var(--foreground-color-inverted);
  margin: .1rem;
  border-radius: .2rem;
  visibility: hidden;
  opacity: 0;
  transition: opacity 2s ease-in, visibility 0ms ease-in 2s;

  &.visible {
    visibility: visible;
    opacity: 1;
    transition: opacity .25s ease-in, visibility 0ms ease-in 0ms;
  }

  & > h3 {
    font-size: 60%;
    margin: 0 .1rem;
    text-align: center;
  }

  & > p {
    font-size: 40%;
    margin: .2rem .1rem;
    white-space: pre-line;
  }
}

#loading-container {
  display: flex;
  flex-direction: column;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  align-items: center;
  text-align: center;
  background-color: var(--background-color);
  cursor: progress;

  &.hiding {
    animation: fadeOut 0.5s ease-out forwards;
  }

  & > h1 {
    font-size: 6.5vh;
    margin-top: 5rem;
  }

  & > p {
    font-size: 2vh;
    font-family: monospace;
    color: var(--foreground-color-secondary);
    margin-top: auto;
  }

  & > button {
    margin-bottom: auto;
    font-size: 2vh;
  }
}

#sudoku-container {
  padding: .5rem .2rem 0;
  gap: .1rem;
  justify-content: center;
  display: grid;
  grid-auto-rows: calc(var(--cell-size) - .05rem);
  /* half gap */
}

table#sudoku {
  border-collapse: collapse;
  grid-column: 2;
  grid-row: 1 / var(--sudoku-row-count);
  justify-self: center;
  margin: 0 1rem;
  height: fit-content;
  font-size: min(3vw, 3vh);

  & > colgroup,
  & > tbody {
    border: solid medium;
  }

  & td {
    position: relative;
    border: solid thin;
    padding: 1px;
    height: var(--cell-size);
    width: var(--cell-size);

    & > input {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      box-sizing: border-box;

      background-color: transparent;
      color: var(--foreground-color-inverted);
      border: none;
      appearance: textfield;
      text-align: center;
      padding: 0;
      font-size: inherit;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        appearance: none;
        margin: 0;
      }

      &:not(.solution):disabled {
        color: var(--foreground-color);
      }
    }

    & > .notes {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;

      display: grid;
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(3, 1fr);
      gap: 10%;

      pointer-events: none;

      & > span {
        display: flex;
        align-items: center;
        justify-content: center;
        visibility: hidden;
        font-size: 0.25rem;
        color: var(--foreground-color-secondary);

        width: 80%;
        height: 80%;

        /* Row 1 */
        &[data-note='1'] {
          grid-area: 1 / 1;
        }

        &[data-note='2'] {
          grid-area: 1 / 2;
          justify-self: center;
        }

        &[data-note='3'] {
          grid-area: 1 / 3;
          justify-self: end;
        }

        /* Row 2 */
        &[data-note='4'] {
          grid-area: 2 / 1;
          align-self: center;
        }

        &[data-note='6'] {
          grid-area: 2 / 3;
          justify-self: end;
          align-self: center;
        }

        /* Row 3 */
        &[data-note='7'] {
          grid-area: 3 / 1;
          align-self: end;
        }

        &[data-note='8'] {
          grid-area: 3 / 2;
          justify-self: center;
          align-self: end;
        }

        &[data-note='9'] {
          grid-area: 3 / 3;
          justify-self: end;
          align-self: end;
        }
      }
    }
  }

  &.notes-mode td > .notes > span {
    pointer-events: auto;
  }

  & .error td,
  & td.error {
    background-image: linear-gradient(45deg,
        rgba(255, 0, 0, 0.25) 25%, transparent 25%,
        transparent 50%, rgba(255, 0, 0, 0.25) 50%,
        rgba(255, 0, 0, 0.25) 75%, transparent 75%,
        transparent 100%);
    background-size: var(--cell-size) var(--cell-size);
    /* table cell size */
    background-position: left;
  }
}

#number-overview {
  grid-row: 2 / calc(sqrt(var(--sudoku-row-count)) + 1);
  grid-column: 1;
  border-collapse: collapse;
  border: solid .04rem;
  justify-self: left;
  font-size: 60%;

  & > tbody > tr > td {
    border: solid .01rem;
    min-width: 1rem;
    width: min-content;
    padding: .3rem;

    & > span {
      color: var(--foreground-color-secondary);
      float: right;

      &.complete {
        color: #19be14;
      }
    }
  }
}

#toggle-notes-btn {
  grid-row: calc(sqrt(var(--sudoku-row-count)) + 2);
  grid-column: 1;
  justify-self: center;
  width: 80%;
}

#settings-container {
  justify-self: center;
  width: 75%;
  max-width: 95%;
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 30%;
  margin: .5rem 0;
  grid-row: 2;
  grid-column: 3;

  & > datalist {
    width: 100%;
    display: flex;
    justify-content: space-between;
    color: var(--foreground-color-secondary);
  }

  & > input[type=range] {
    background-color: transparent;
    cursor: pointer;
    width: 100%;

    &::-webkit-slider-runnable-track,
    &::-moz-range-track {
      height: .2rem;
      background-color: rgba(0, 0, 0, .15);
      border-radius: .2rem;
    }

    &::-webkit-slider-thumb,
    &::-moz-range-thumb {
      height: .5rem;
      width: .5rem;
      box-sizing: border-box;
      background-color: rgba(0, 0, 0, 0.15);
      border: .08rem solid var(--foreground-color);
      border-radius: 50%;
    }

    &::-webkit-slider-thumb {
      appearance: none;
    }
  }

  & > output {
    color: var(--foreground-color-secondary);
  }

  & > #size-option-container {
    position: relative;

    & > input[type=number] {
      border: 1px solid var(--foreground-color);
      background-color: rgba(0, 0, 0, .15);
      color: var(--foreground-color-secondary);
      border-radius: 4px;
      padding: .15rem 0;
      width: 2rem;
      text-align: center;
      font-size: inherit;
      appearance: textfield;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        appearance: none;
        margin: 0;
      }
    }

    & > #stepper-buttons {
      position: absolute;
      right: 1px;
      top: 1px;
      bottom: 1px;
      display: flex;
      flex-direction: column;
      border-left: 1px solid var(--foreground-color);

      & > button {
        appearance: none;
        border: none;
        background-color: transparent;
        padding: 0;
        margin: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        flex: 1;
        width: .75rem;
        color: var(--foreground-color-secondary);
        font-size: 0.8em;

        cursor: pointer;
        transition: background-color 0.2s;

        &#stepper-up {
          border-bottom: 1px solid var(--foreground-color);
        }
      }
    }
  }
}

#btn-container {
  grid-row: 4;
  grid-column: 3;
  gap: .5rem;
  margin: .1rem 0;
  display: flex;
  justify-content: space-between;
  justify-self: center;
}

#message-container {
  grid-column: 2;
  grid-row: calc(var(--sudoku-row-count) + 1);
  height: max-content;
  text-align: center;

  & > #error-info {
    color: red;
  }

  & #win-info {
    color: greenyellow;
  }
}

#sudoku:not(:has(tbody .error)) ~ #message-container > #error-info {
  display: none;
}

#sudoku:is(:has(tbody .error), :has(tbody > tr > td > input:is(:invalid, .solution))) ~ #message-container > #win-info {
  display: none;
}

#sudoku:is(:has(tbody .error), :has(tbody > tr > td > input:is(:invalid, .solution))) ~ #message-container {
  display: none;
}