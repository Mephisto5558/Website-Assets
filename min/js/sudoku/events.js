import{cancelBtn,difficultyOutput,difficultySlider,htmlBoard,sizeOption,sudoku}from"./constants.js";import{checkErrors,startTimer,updateNumberOverviewSpan,updateMinMax}from"./utils.js";export default void 0;sudoku.addEventListener("keypress",t=>{t.preventDefault();var r=sudoku.classList.contains("notes-mode");if(" "===t.key)return r?"SPAN"!=t.target.tagName?void 0:(t.target.textContent="",t.target.classList.remove("visible")):(t.target.value&&updateNumberOverviewSpan(Number(t.target.value),!1),t.target.value="",checkErrors(htmlBoard));if(/^\d$/.test(t.key)){let e=Number(t.target[r?"textContent":"value"]+t.key);if(e&&!(e>htmlBoard.length&&(e=Number(t.key))>htmlBoard.length))if(globalThis.timerInterval||startTimer(),r){let e;"SPAN"==t.target.tagName?e=t.target:(r=[...t.target.nextSibling.childNodes],(e=r.find(e=>!e.textContent))||((e=r[0]).textContent="")),e.classList.add("visible"),void(e.textContent+=t.key)}else t.target.value&&updateNumberOverviewSpan(Number(t.target.value),!1),t.target.value=e,updateNumberOverviewSpan(e,!0),checkErrors(htmlBoard)}});let eventKeys=["ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Tab","Home","End"];sudoku.addEventListener("keydown",r=>{if("Enter"===r.key&&"SPAN"==r.target.tagName)return r.preventDefault(),r.target.blur();if("INPUT"==r.target.tagName){if("Backspace"==r.key)return updateNumberOverviewSpan(Number(r.target.value),!1),r.target.value="",checkErrors(htmlBoard),r.preventDefault();if(eventKeys.includes(r.key)){r.preventDefault();var t=htmlBoard.length-1;let e;if(r.key==eventKeys[5]||r.key==eventKeys[6]){var a=r.key==eventKeys[5]?"find":"findLast";let t=e=>!(e.disabled||r.shiftKey&&e.dataset.group!=r.target.dataset.group);e=(r.ctrlKey?htmlBoard[a](e=>e.some(t)):htmlBoard[Number(r.target.dataset.row)-1])[a](t)}for(;(!e||e.disabled)&&(!e||e.dataset.row!=r.target.dataset.row||e.dataset.col!=r.target.dataset.col);){var s=Number((e??r.target).dataset.row)-1,n=Number((e??r.target).dataset.col)-1;switch(r.key){case eventKeys[0]:e=htmlBoard[0==s?t:s-1][n];break;case eventKeys[1]:e=htmlBoard[s==t?0:1+s][n];break;case eventKeys[2]:e=htmlBoard[s][0==n?t:n-1];break;case eventKeys[3]:e=htmlBoard[s][n==t?0:1+n];break;case eventKeys[4]:r.shiftKey?e=0==s&&0==n?htmlBoard[t][t]:0==n?htmlBoard[s-1][t]:htmlBoard[s][n-1]:e=s==t&&n==t?htmlBoard[0][0]:n==t?htmlBoard[1+s][0]:htmlBoard[s][1+n]}}e.focus()}}}),sudoku.addEventListener("blur",e=>{if("SPAN"==e.target.tagName&&!e.target.textContent)return e.target.classList.remove("visible")},!0),document.querySelector("#stepper-up").addEventListener("click",()=>{sizeOption.stepUp(),sizeOption.dispatchEvent(new Event("change",{bubbles:!0}))}),document.querySelector("#stepper-down").addEventListener("click",()=>{sizeOption.stepDown(),sizeOption.dispatchEvent(new Event("change",{bubbles:!0}))}),sizeOption.addEventListener("change",updateMinMax),difficultySlider.addEventListener("input",e=>difficultyOutput.textContent=e.target.value),cancelBtn.addEventListener("click",()=>{globalThis.sudokuWorker.terminate(),globalThis.sudokuWorker.dispatchEvent(new MessageEvent("message",{data:{type:"cancel",message:"user request"}})),delete globalThis.sudokuWorker}),document.querySelector("#toggle-notes-btn").addEventListener("click",e=>{sudoku.classList.toggle("notes-mode")?e.target.style.backgroundColor="green":e.target.style.removeProperty("background-color")});