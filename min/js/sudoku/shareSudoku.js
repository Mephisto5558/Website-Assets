let BASE=62n,BASE_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function bigIntToBase62(e){if(0n===e)return"0";let r="";for(;0n<e;e/=BASE)r=BASE_ALPHABET[Number(e%BASE)]+r;return r}function base62ToBigInt(e){return[...e].reduce((e,r)=>e*BASE+BigInt(BASE_ALPHABET.indexOf(r)),0n)}function generateShareURL(e,r){var t,a=BigInt(e.length),o=a+1n;let n=0n;for(t of r.flat())n=n*o+BigInt(t);var i,l,r={s:n,m:BigInt("0b"+e.flat().map(e=>e?"1":"0").join("")),d:a},s=new URL(globalThis.location.href);for([i,l]of Object.entries(r))s.searchParams.set(i,bigIntToBase62(l));return s.toString()}function loadFromShareURL(){var e=new URLSearchParams(globalThis.location.search),t=e.get("d"),a=e.get("s"),e=e.get("m");if(a&&e&&t)try{var o=Number(base62ToBigInt(t)),n=o*o,i=BigInt(o+1);let r=base62ToBigInt(a);var l=[];for(let e=0;e<n;e++){var s=r%i;l.push(Number(s)),r/=i}l.reverse();var g=base62ToBigInt(e).toString(2).padStart(n,"0"),h=[],u=[];for(let r=0;r<o;r++){var B=[],f=[];for(let e=0;e<o;e++){var c=r*o+e,b=l[c];f.push(b),B.push("1"===g[c]?b:0)}h.push(B),u.push(f)}if(h.length!==o||u.length!==o)throw new Error(`Failed to construct board of size ${o}.`);return{fullBoard:u,board:h}}catch(e){console.error("Failed to parse shared Sudoku URL:",e),globalThis.history.replaceState({},"",globalThis.location.pathname)}}export{generateShareURL,loadFromShareURL};