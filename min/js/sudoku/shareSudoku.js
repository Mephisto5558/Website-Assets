let BASE=62n,BASE_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function bigIntToBase62(r){if(0n===r)return"0";let e="";for(;0n<r;r/=BASE)e=BASE_ALPHABET[Number(r%BASE)]+e;return e}function base62ToBigInt(r){return[...r].reduce((r,e)=>r*BASE+BigInt(BASE_ALPHABET.indexOf(e)),0n)}function generateShareURL(r,e){var t,n,e={s:BigInt(e.flat().join("")),m:BigInt("0b"+r.flat().map(r=>r?"1":"0").join("")),d:BigInt(r.length)},a=new URL(globalThis.location.href);for([t,n]of Object.entries(e))a.searchParams.set(t,bigIntToBase62(n));return a.toString()}function loadFromShareURL(){var r=new URLSearchParams(globalThis.location.search),e=r.get("d"),t=r.get("s"),n=r.get("m");if(t||n||e){if(!t||!n||!e)return console.error('Missing URL param. Expected "s", "m" and "d", got',JSON.stringify(Object.fromEntries(r)));try{var a=Number(base62ToBigInt(e)),o=base62ToBigInt(t).toString().padStart(a**2,"0"),i=base62ToBigInt(n).toString(2).padStart(a**2,"0"),s=[],g=[];for(let e=0;e<a;e++){var u=[],B=[];for(let r=0;r<a;r++){var l=e*a+r,f=Number(o[l]);B.push(f),u.push("1"===i[l]?f:0)}s.push(u),g.push(B)}return{fullBoard:g,board:s}}catch(r){return console.error("Failed to parse short Sudoku URL:",r)}}}export{generateShareURL,loadFromShareURL};