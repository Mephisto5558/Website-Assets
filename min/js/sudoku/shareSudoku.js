let BASE=62n,BASE_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function bigIntToBase62(r){if(0n===r)return"0";let e="";for(;0n<r;r/=BASE)e=BASE_ALPHABET[Number(r%BASE)]+e;return e}function base62ToBigInt(r){return r.reduce((r,e)=>r*BASE+BigInt(BASE_ALPHABET.indexOf(e)),0n)}function generateShareURL(r,e){var e=BigInt(e.flat().join("")),t=BigInt("0b"+r.flat().map(r=>r?"1":"0").join("")),a=new URL(globalThis.location.href);return a.searchParams.set("s",bigIntToBase62(e)),a.searchParams.set("m",bigIntToBase62(t)),a.searchParams.set("d",r.length),a.toString()}function loadFromShareURL(){var r=new URLSearchParams(globalThis.location.search),e=r.get("s"),t=r.get("m"),o=Number(r.get("d"));if(e||t||o){if(!e||!t||!o)return console.error('Missing URL param. Expected "s", "m" and "d", got',JSON.stringify(Object.fromEntries(r)));try{var a=base62ToBigInt(e).toString().padStart(o**2,"0"),s=base62ToBigInt(t).toString(2).padStart(o**2,"0"),i=[...a],g=[],u=[];for(let t=0,a=[],n=[];t<o;t++){for(let r=0,e=t*o+r;r<o;r++){var l=Number(i[e]);n.push(l),a.push("1"===s[e]?l:void 0)}u.push(n),g.push(a)}return{fullBoard:u,board:g}}catch(r){return console.error("Failed to parse short Sudoku URL:",r)}}}export{generateShareURL,loadFromShareURL};